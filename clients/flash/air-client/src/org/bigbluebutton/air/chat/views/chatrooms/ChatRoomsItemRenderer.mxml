<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:views="org.bigbluebutton.air.common.views.*"
				styleName="chatRoomItemStyle">

	<fx:Script>
		<![CDATA[
			import org.bigbluebutton.lib.chat.models.ChatMessages;
			
			private function setFirstLetters(participantName:String):void {
				var names:Array = participantName.split(" ");
				var firstLettersText:String = names[0].charAt(0);
				if (names[1]) {
					firstLettersText += names[1].charAt(0);
				}
				participantIcon.firstLetters.text = firstLettersText.toUpperCase();
			}
			
			override public function set data(obj:Object):void {
				super.data = obj;
				if (obj) {
					if (!obj.hasOwnProperty("button")) {
						title.text = obj.name;
						if (obj.name == resourceManager.getString('resources', 'chat.item.publicChat')) {
							publicChatIcon.visible = true;
							publicChatIcon.includeInLayout = true;
						} else {
							setFirstLetters(obj.name);
							participantIcon.visible = true;
							participantIcon.includeInLayout = true;
						}
						if (obj.online == false) {
							title.text += resourceManager.getString('resources', 'userDetail.userOffline');
						}
						var chatMessages:ChatMessages = obj.chatMessages as ChatMessages;
						newMessages.label = String(chatMessages.newMessages);
						if (chatMessages.newMessages > 0) {
							newMessages.visible = true;
						} else {
							newMessages.visible = false;
						}
						
					} else {
						newMessages.visible = false;
						title.text = "+" + resourceManager.getString('resources', 'chat.item.privateChat');
					}
				}
			}
		]]>
	</fx:Script>
	<s:Group width="100%"
			 height="{getStyle('itemHeight')}">
		<s:layout>
			<s:HorizontalLayout verticalAlign="middle"
								horizontalAlign="center"
								paddingLeft="{getStyle('itemPaddingLeft')}"
								paddingRight="{getStyle('itemPaddingRight')}" />
		</s:layout>
		<s:Image id="publicChatIcon"
				 visible="false"
				 includeInLayout="false"
				 styleName="iconStyle publicChatIconStyle" />
		<views:ParticipantIcon id="participantIcon"
										 visible="false"
										 includeInLayout="false" />
		<s:Label id="title"
				 width="100%"
				 height="100%"
				 styleName="contentFontSize" />
		<s:Button id="newMessages"
				  buttonMode="false"
				  styleName="newMessagesButtonStyle" />
	</s:Group>
	<s:Line width="100%">
		<s:stroke>
			<s:SolidColorStroke color="{getStyle('lineColor')}"
								weight="{getStyle('lineWeight')}" />
		</s:stroke>
	</s:Line>
</s:ItemRenderer>
